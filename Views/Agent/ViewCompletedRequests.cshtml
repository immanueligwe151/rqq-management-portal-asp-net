@{
    ViewBag.Title = "View Completed Requests";
    var username = Session["AgentUsername"] as string;
}

<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
        padding-top: 60px;
    }

    .modal-dialog {
        margin: 15% auto;
        width: 80%;
        max-width: 600px;
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #ddd;
    }

    .modal-title {
        margin: 0;
        font-size: 1.25rem;
    }

    .close {
        font-size: 1.5rem;
        font-weight: 900;
        cursor: pointer;
        background: none;
        border: none;
        color: black;
    }

    .modal-footer {
        padding-top: 10px;
        display: flex;
        justify-content: space-between;
    }

    .modal-body {
        padding: 20px 0;
    }

    .btn {
        padding: 8px 16px;
        font-size: 1rem;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .btn-success {
        background-color: #28a745;
        color: white;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }
</style>

<div class="container mt-5">
    <h2 class="mb-4">View Completed Requests</h2>
    <div class="row" id="assigned-requests">
        <p>Loading completed requests...</p>
    </div>
</div>

<!-- Request Detail Modal -->
<div id="requestModal" class="modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="request-details-h5">Request Details</h5>
                <button type="button" class="close" onclick="closeModal('requestModal')">&times;</button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Dynamic content -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Firebase SDKs -->
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-database-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-storage-compat.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const username = @Html.Raw(Json.Encode(username));
            console.log("Logged in as:", username);

            const firebaseConfig = {
                apiKey: "AIzaSyCUiL8du5Kcr2qFvGMClaVvi_uKM8xGInA",
                authDomain: "rqq-management-project.firebaseapp.com",
                databaseURL: "https://rqq-management-project-default-rtdb.europe-west1.firebasedatabase.app",
                projectId: "rqq-management-project",
                storageBucket: "rqq-management-project.appspot.com",
                messagingSenderId: "397221027690",
                appId: "1:397221027690:web:646a65603cc2a72f5e0f13"
            };

            firebase.initializeApp(firebaseConfig);
            const db = firebase.database();
            const container = document.getElementById("assigned-requests");
            let currentRequestId = null;

            function formatDate(dateStr) {
                return new Date(dateStr).toLocaleString();
            }

            function loadAssignedRequests() {
                db.ref("requests").on("value", (snapshot) => {
                    container.innerHTML = "";
                    const data = snapshot.val();
                    let found = false;

                    for (const id in data) {
                        const req = data[id];
                        if (req.status === "completed" && req.agent_username === username) {
                            found = true;
                            const card = document.createElement("div");
                            card.className = "col-md-4 mb-3";

                            card.innerHTML = `
                                <div class="card h-100" role="button" onclick="openModal('${id}')">
                                    <div class="card-body">
                                        <h5 class="card-title">Request ${id}</h5>
                                        <p class="card-text"><strong>Created:</strong> ${formatDate(req.created_at)}</p>
                                        <p class="card-text"><strong>Assigned:</strong> ${formatDate(req.assigned_at)}</p>
                                        <p class="card-text"><strong>Completed:</strong> ${formatDate(req.completed_at)}</p>
                                    </div>
                                </div>`;
                            container.appendChild(card);
                        }
                    }

                    if (!found) {
                        container.innerHTML = "<p>No completed requests.</p>";
                    }
                });
            }

            window.openModal = function (id) {
                currentRequestId = id;
                console.log("Opening modal for request ID:", id);
                db.ref("requests/" + id).once("value").then((snapshot) => {
                    const req = snapshot.val();
                    if (!req) return alert("Request not found.");

                    document.getElementById("request-details-h5").innerHTML = `Request Details for ${id}`;
                    const progress = req.progress || {};
                    document.getElementById("modalContent").innerHTML = `
                        <p><strong>Part Number:</strong> ${req.part_number}</p>
                        <p><strong>Manufacturer:</strong> ${req.manufacturer}</p>
                        <p><strong>Quantity:</strong> ${req.quantity}</p>
                        <p><strong>Required When:</strong> ${req.required_when}</p>
                        <p><strong>Preferred Condition:</strong> ${req.preferred_condition}</p>
                        <hr />
                        <p><strong>Client Name:</strong> ${req.from?.name}</p>
                        <p><strong>Email:</strong> ${req.from?.email}</p>
                        <p><strong>Phone:</strong> ${req.from?.phone}</p>
                        <p><strong>Company:</strong> ${req.from?.company}</p>
                        <p><strong>Position:</strong> ${req.from?.position}</p>
                        <hr />
                        <div id="progress-section">
                            <h5>Progress Tracker</h5>
                            ${renderProgressCheckboxes(progress)}
                        </div>
                        <hr />
                        <div><strong>Uploaded Images:</strong><div id="imagePreview"></div></div>
                    `;

                    loadImages(req.picture_path || "");
                    openModalBox('requestModal');
                });
            };

            function renderProgressCheckboxes(progress) {
                const stages = ["received", "reviewed", "quoted", "follow_up"];
                return stages.map((stage, i) => {
                    const disabled = i === 0 ? "" : (!progress[stages[i - 1]] ? "disabled" : "");
                    const checked = progress[stage] ? "checked" : "";
                    return `
                        <div class="form-check">
                            <input class="form-check-input progress-checkbox" type="checkbox" id="${stage}" ${checked} ${disabled} onchange="updateProgress('${stage}')">
                            <label class="form-check-label" for="${stage}">${stage.charAt(0).toUpperCase() + stage.slice(1)}</label>
                        </div>`;
                }).join("");
            }


            

            function loadImages(path) {
                alert(path);
                $.ajax({
                    url: '/Agent/GetImages',
                    type: 'GET',
                    data: { path: path },
                    success: function (data) {
                        const container = document.getElementById('imagePreview');
                        container.innerHTML = '';

                        if (data.error) {
                            container.innerHTML = `<p style="color: red;">Error: ${data.error}</p>`;
                            return;
                        }

                        if (data.length === 0) {
                            container.innerHTML = "<p>No images found.</p>";
                        } else {
                            data.forEach(function (url) {
                                const img = document.createElement('img');
                                img.src = url;
                                alert(url);
                                img.alt = 'Uploaded Image';
                                img.style.maxWidth = '200px';
                                img.style.margin = '10px';
                                container.appendChild(img);
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        document.getElementById('image-container').innerHTML = `<p style="color: red;">Request failed: ${error}</p>`;
                    }
                });
            }

            loadAssignedRequests();
        });

        function openModalBox(id) {
            document.getElementById(id).style.display = 'block';
        }

        function closeModal(id) {
            document.getElementById(id).style.display = 'none';
        }
    </script>
}

